{
  "id": 563,
  "name": "status",
  "attribut": {
    "1": {
      "name": "color",
      "nullable": "not",
      "size": "25",
      "formtype": "text",
      "datatype": "string"
    },
    "2": {
      "name": "key",
      "nullable": "not",
      "size": "11",
      "formtype": "text",
      "datatype": "integer"
    },
    "3": {
      "name": "label",
      "nullable": "not",
      "size": "25",
      "formtype": "text",
      "datatype": "string"
    }
  },
  "relation": [],
  "module": {
    "id": "5",
    "name": "ModuleData"
  },
  "apidoc": [
    {
      "name": "Create status",
      "request": {
        "method": "POST",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\"status\":{\"id\":\"\",\"color\":\"\",\"key\":\"\",\"label\":\"\"}}"
        },
        "url": {
          "raw": "{{base_url}}status.create",
          "protocol": "",
          "host": "{{base_url}}",
          "path": [
            "status.create"
          ]
        },
        "description": "Create status"
      },
      "response": []
    },
    {
      "name": "Get status",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}status.detail?id=",
          "protocol": "",
          "host": "{{base_url}}",
          "path": [
            "status.detail"
          ],
          "query": [
            {
              "key": "id",
              "value": ""
            }
          ]
        },
        "description": "Get status"
      },
      "response": []
    },
    {
      "name": "List status",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}status.lazyloading?dfilters=on&next=1&per_page=10",
          "protocol": "",
          "host": "{{base_url}}",
          "path": [
            "status.lazyloading"
          ],
          "query": [
            {
              "key": "dfilters",
              "value": "on"
            },
            {
              "key": "next",
              "value": "1"
            },
            {
              "key": "per_page",
              "value": "10"
            }
          ]
        },
        "description": "API documentation for LibrairieNum\u00e9rique\n\nlazyloading api, how it works?\n\nthe lazyloading api is used to manage different kind of reading operation, such as filtering, pagination, order by a parameter and so on.\n\nTo enalbe lazyloading, you must specify the parameter dfilters=true and then give the attribut with following nomenclatura :\n\nattributname:opt=value\n\nattributname can be: \n- the attribut of the current class ex: name:eq=value\n- the attribut of an imbricate class following the nomenclatura: entity.attribute:opt=value ex: category.name:eq=acategory\n\nopt can be:\n- eq : =\n- lt : <\n- gt : >\n- get: >=\n- let: <=\n- lkl: like %value\n- lkr: like value%\n- btw: between (). for this option, value is specified as value1_value2 the '_' makes the separation between value1 and value2\n\nif none of those possible value of opt is specified, the request will be traited with operator like %value% by default\n\nexample:\nlet's have the class book_library:{id, stock, book:{name, price, ..., category:{}}, library: {id, name, ...}}\n\nfind a book of a specific library with id or name\n request\n - with id: {{prod_url}}book-library&dfilters=on&library.id:eq=5\n - with name: {{prod_url}}book-library&dfilters=on&library.id:opt=name\n - ordering by book id desc: {{prod_url}}book-library&dfilters=on&order=book.id desc\n\nto handle pagination you need 2 paramters: next and per_page those parameter work together (the dfilters is optional if you are just doing pagination without any other kind of filtering)\n\nexample:\nlet's have this request: go to the 5th page of book-library a print 20 element per page\n- {{prod_url}}book-library&next=5&per_page=20\n\n"
      },
      "response": []
    },
    {
      "name": "Update status",
      "request": {
        "method": "PUT",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": "{\"status\":{\"id\":\"\",\"color\":\"\",\"key\":\"\",\"label\":\"\"}}"
        },
        "url": {
          "raw": "{{base_url}}status.update?id=",
          "protocol": "",
          "host": "{{base_url}}",
          "path": [
            "status.update"
          ],
          "query": [
            {
              "key": "id",
              "value": ""
            }
          ]
        },
        "description": "Update status"
      },
      "response": []
    },
    {
      "name": "Delete status",
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{base_url}}status.delete?id=",
          "protocol": "",
          "host": "{{base_url}}",
          "path": [
            "status.delete"
          ],
          "query": [
            {
              "key": "id",
              "value": ""
            }
          ]
        },
        "description": "Delete status"
      },
      "response": []
    }
  ]
}