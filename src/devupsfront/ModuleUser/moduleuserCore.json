{"created_at":null,"updated_at":null,"deleted_at":null,"name":"ModuleUser","jsondata":{"name":"ModuleUser","project":"subcontractor","id":2},"readonly":"0","id":"33","component":{"id":null,"name":null,"project":{"created_at":null,"updated_at":null,"deleted_at":null,"id":null,"ref":null,"name":null,"label":null,"logo":null,"srclogo":"http:\/\/127.0.0.1\/toolrad2\/web\/assets\/no_image.jpg","customer":null,"template":null,"user":{"id":null,"username":null,"firstname":null,"lastname":null,"email":null,"lang":null,"token":null,"password":null,"telephone":null,"country":{"id":null,"name":null,"phonecode":null},"spacekola_ref":null},"components":[],"listmodule":[],"listclass":[],"classcount":0}},"entities":"1","listentity":[{"attribut":[{"name":"id","designation":"","visibility":"","datatype":"integer","size":"","nullable":"not","formtype":"","comment":"Default identifier by auto-increment "},{"name":"firstname","designation":"","visibility":"","datatype":"string","size":"155","nullable":"not","formtype":"","comment":""},{"name":"lastname","designation":"","visibility":"","datatype":"string","size":"155","nullable":"not","formtype":"","comment":""},{"name":"sex","designation":"","visibility":"","datatype":"string","size":"5","nullable":"not","formtype":"","comment":""},{"name":"profile","designation":"","visibility":"","datatype":"string","size":"255","nullable":"default","formtype":"image","comment":"","nullablevalue":true}],"relation":[{"entity":"enterprise","cardinality":"oneToOne"}],"methods":[{"name":"","datatype":"","comment":""}],"name":"user","id":"101","module":{"id":"33","name":"ModuleUser"},"projectid":"5","relations":[{"entity":"enterprise","cardinality":"oneToOne"}],"apidoc":[{"name":"Create user","request":{"method":"POST","header":[],"body":{"mode":"raw","raw":"{\"user\":{\"id\":\"\",\"firstname\":\"\",\"lastname\":\"\",\"sex\":\"\",\"profile\":\"\",\"enterprise.id\":\"\"}}"},"url":{"raw":"{{base_url}}user.create","protocol":"","host":"{{base_url}}","path":["user.create"]},"description":"Create user"},"response":[]},{"name":"Get user","request":{"method":"GET","header":[],"url":{"raw":"{{base_url}}user.detail?id=","protocol":"","host":"{{base_url}}","path":["user.detail"],"query":[{"key":"id","value":""}]},"description":"Get user"},"response":[]},{"name":"List user","request":{"method":"GET","header":[],"url":{"raw":"{{base_url}}user.lazyloading?dfilters=on&next=1&per_page=10","protocol":"","host":"{{base_url}}","path":["user.lazyloading"],"query":[{"key":"dfilters","value":"on"},{"key":"next","value":"1"},{"key":"per_page","value":"10"}]},"description":"API documentation for LibrairieNum\u00e9rique\n\nlazyloading api, how it works?\n\nthe lazyloading api is used to manage different kind of reading operation, such as filtering, pagination, order by a parameter and so on.\n\nTo enalbe lazyloading, you must specify the parameter dfilters=true and then give the attribut with following nomenclatura :\n\nattributname:opt=value\n\nattributname can be: \n- the attribut of the current class ex: name:eq=value\n- the attribut of an imbricate class following the nomenclatura: entity.attribute:opt=value ex: category.name:eq=acategory\n\nopt can be:\n- eq : =\n- lt : <\n- gt : >\n- get: >=\n- let: <=\n- lkl: like %value\n- lkr: like value%\n- btw: between (). for this option, value is specified as value1_value2 the '_' makes the separation between value1 and value2\n\nif none of those possible value of opt is specified, the request will be traited with operator like %value% by default\n\nexample:\nlet's have the class book_library:{id, stock, book:{name, price, ..., category:{}}, library: {id, name, ...}}\n\nfind a book of a specific library with id or name\n request\n - with id: {{prod_url}}book-library&dfilters=on&library.id:eq=5\n - with name: {{prod_url}}book-library&dfilters=on&library.id:opt=name\n - ordering by book id desc: {{prod_url}}book-library&dfilters=on&order=book.id desc\n\nto handle pagination you need 2 paramters: next and per_page those parameter work together (the dfilters is optional if you are just doing pagination without any other kind of filtering)\n\nexample:\nlet's have this request: go to the 5th page of book-library a print 20 element per page\n- {{prod_url}}book-library&next=5&per_page=20\n\n"},"response":[]},{"name":"Update user","request":{"method":"PUT","header":[],"body":{"mode":"raw","raw":"{\"user\":{\"id\":\"\",\"firstname\":\"\",\"lastname\":\"\",\"sex\":\"\",\"profile\":\"\",\"enterprise.id\":\"\"}}"},"url":{"raw":"{{base_url}}user.update?id=","protocol":"","host":"{{base_url}}","path":["user.update"],"query":[{"key":"id","value":""}]},"description":"Update user"},"response":[]},{"name":"Delete user","request":{"method":"DELETE","header":[],"url":{"raw":"{{base_url}}user.delete?id=","protocol":"","host":"{{base_url}}","path":["user.delete"],"query":[{"key":"id","value":""}]},"description":"Delete user"},"response":[]}]}]}